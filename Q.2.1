using System;

namespace Part_1
{
   
    
    internal class Program
    {
        abstract class Tile
        {

            protected int x;
            protected int y;
            public enum TileType
            {
                Hero,
                Enemy,
                Gold,
                Weapon
            }
            // Constructor of abstract class
            public Tile(int x, int y)
            {


                this.x = x;
                this.y = y;
            }
        }
        class Obstacle : Tile
        {
            //constructor simply calls the base classâ€™s constructor with X and Y parameters.
            public Obstacle(int Tile) : base (Tile, Tile)
            {
                
            }

        }

        class EmptyTile : Tile
        {
            //merely exists to denote an empty tile.
            public EmptyTile(int Tile) : base (Tile, Tile)
            {

            }
        }


        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}

  
    
